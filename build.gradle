buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}


// main 클래스가 없을 때 사용하는 설정
bootJar { enabled = false }
jar { enabled = true }


subprojects {

    group = 'com.multi'
    version = '1.0.0-SNAPSHOT'

    sourceCompatibility = '17'
    targetCompatibility = '17'

    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    ext {
        set('springCloudVersion', "2023.0.1")
    }

    // 관리하는 모듈의 공통 dependencies
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.projectlombok:lombok'


        annotationProcessor('org.projectlombok:lombok')
        testAnnotationProcessor('org.projectlombok:lombok')
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    test {
        useJUnitPlatform()
    }
}


project(':oompa-global') {
    bootJar.enabled = false
    jar.enabled = true

}

// 게시글 모듈 설정
//project(':oompa-data-article'){
//
//    bootJar { enabled = true }
//    jar { enabled = true }
//
//    dependencies {
//        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//        annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
//        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//        annotationProcessor "jakarta.persistence:jakarta.persistence-api"
//
//        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//        runtimeOnly 'com.h2database:h2'
//    }
//
//    def querydslSrcDir = 'src/main/generated'
//
//    clean {
//        delete file(querydslSrcDir)
//    }
//
//    tasks.withType(JavaCompile) {
//        options.generatedSourceOutputDirectory = file(querydslSrcDir)
//    }
//}

